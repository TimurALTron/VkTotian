from typing import Tuple

from vkbottle.bot import Blueprint, Message
from vkbottle.dispatch.rules.base import CommandRule

import sqlManager

bp = Blueprint()

# You can add auto_rules to blueprint labeler:
# bp.labeler.auto_rules.append()
# You can change config for blueprint labeler locally:
bp.labeler.vbml_ignore_case = True


@bp.on.message(text=["–∫—É—Ä–∏—Ç—å", "–ø–æ–∫—É—Ä–∏—Ç—å", "–≤–∫—É—Ä–∏—Ç—å"])
async def smoke(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) –ø—Ä–∏–∫—É—Ä–∏–ª –º–∞–ª–∏–±–æ—Ä–æ üö¨")


@bp.on.message(text="–ø–∏–≤–æ")
async def pivo(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) —Ö–ª–µ–±–Ω—É–ª –ø–∏–≤–∫–æ üç∫")


@bp.on.message(text="–≤–∏–Ω–æ")
async def vino(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) –≤—ã–ø–∏–ª –≤–∏–Ω–æ üç∑")


@bp.on.message(text="–ø–∞—Ä–∏—Ç—å")
async def vape(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) –≤—ã–ø–∞—Ä–∏–ª 20–∫–≥ –Ω–∏–∫–æ—Ç–∏–Ω–∞ üö¨")


@bp.on.message(text="–Ω–∞—Ä–∫–æ")
async def narko(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) —É–ø–æ—Ç—Ä–µ–±–∏–ª –Ω–∞—Ä–∫–æ—Ç—É ü§§")


@bp.on.message(text="—Å–æ–ª—å")
async def salt(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) –µ–±–Ω—É–ª —Å–æ–ª—å ü§§")


@bp.on.message(text="–µ–∂–∂–µ")
async def egge(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) –ü–†–û–ö–†–ò–ß–ê–õ –ï–ñ–ñ–ï –ù–ê –í–°–Æ –ë–ï–°–ï–î–£ ü¶î")


@bp.on.message(text="—Å—É–∏—Ü–∏–¥")
async def suicide(message: Message):
    user = await bp.api.users.get(message.from_id)
    await message.answer(f"@id{user[0].id} ({user[0].first_name}) —Å—É–∏—Ü–∏–¥–Ω—É–ª—Å—è ( NOT PROPOGANTNANDAD)  üò°‚öîÔ∏è‚ö†Ô∏è")


@bp.on.message(text="test")
async def suicide(message: Message):
    user = await bp.api.users.get(message.from_id)
    # await message.answer(f"@id{user[0].id} ({user[0].first_name}) —Å—É–∏—Ü–∏–¥–Ω—É–ª—Å—è ( NOT PROPOGANTNANDAD)  üò°‚öîÔ∏è‚ö†Ô∏è")

    await sqlManager.updateUsers(user[0].id, "Tim" ,100)
